- hosts: all
  tasks:


    - name: Set log path for a change
      when: zuul.change is defined
      set_fact:
        log_path: "{{ zuul.change[-2:] }}/{{ zuul.change }}/{{ zuul.patchset }}/{{ zuul.pipeline }}/{{ zuul.job }}/{{ zuul.build[:7] }}"

    - name: Set log path for a ref update
      when: zuul.newrev is defined
      set_fact:
        log_path: "{{ zuul.newrev[-2:] }}/{{ zuul.newrev }}/{{ zuul.pipeline }}/{{ zuul.job }}/{{ zuul.build[:7] }}"

    - name: Set log path for a periodic job
      when: zuul.change is not defined and zuul.newrev is not defined
      set_fact:
        log_path: "{{ zuul.pipeline }}/{{ zuul.job }}/{{ zuul.build[:7] }}"

    - name: Preparing file for logs
      tempfile:
        state: file
      register: tmpe
      no_log: true

    - name: Create log directory
      file:
         path: /tmp/controller
         state: directory
         owner: ubuntu
         group: ubuntu
         mode: 0775

    - block:
        - name: Preparing logs
          copy:
            content: |
              source /home/ubuntu/proxy
              mkdir /tmp/controller/logs
              ssh -i /home/ubuntu/zuul_id_rsa -o StrictHostKeyChecking=no zuul@15.213.141.10 "sudo chown -R zuul.zuul {{ zuul.executor.log_root }}"
              ssh -i /home/ubuntu/zuul_id_rsa -o StrictHostKeyChecking=no zuul@15.213.141.10 "sudo chmod -R 0777 /tmp; sudo chown -R zuul.zuul /tmp"
              scp -i /home/ubuntu/zuul_id_rsa -o StrictHostKeyChecking=no -r zuul@15.213.141.10:{{ zuul.executor.log_root }} /tmp/job_logs
              sudo journalctl -u devstack@dstat.service >>/tmp/controller/logs/dstat.service 2>/dev/null
              sudo journalctl -u devstack@etcd.service >>/tmp/controller/logs/etcd.service 2>/dev/null
              sudo journalctl -u devstack@g-api.service >>/tmp/controller/logs/g-api.service 2>/dev/null
              sudo journalctl -u devstack@g-reg.service >>/tmp/controller/logs/g-reg.service 2>/dev/null
              sudo journalctl -u devstack@ir-api.service >>/tmp/controller/logs/ir-api.service 2>/dev/null
              sudo journalctl -u devstack@ir-cond.service >>/tmp/controller/logs/ir-cond.service 2>/dev/null
              sudo journalctl -u devstack@keystone.service >>/tmp/controller/logs/keystone.service 2>/dev/null
              sudo journalctl -u devstack@q-l3.service >>/tmp/controller/logs/q-l3.service 2>/dev/null
              sudo journalctl -u devstack@q-agt.service >>/tmp/controller/logs/q-agt.service 2>/dev/null
              sudo journalctl -u devstack@q-dhcp.service >>/tmp/controller/logs/q-dhcp.service 2>/dev/null
              sudo journalctl -u devstack@q-meta.service >>/tmp/controller/logs/q-meta.service 2>/dev/null
              sudo journalctl -u devstack@s-account.service >>/tmp/controller/logs/s-account.service 2>/dev/null
              sudo journalctl -u devstack@q-svc.service >>/tmp/controller/logs/q-svc.service 2>/dev/null
              sudo journalctl -u devstack@s-container-sync.service >>/tmp/controller/logs/s-container-sync.service 2>/dev/null
              sudo journalctl -u devstack@s-container.service >>/tmp/controller/logs/s-container.service 2>/dev/null
              sudo journalctl -u devstack@s-object.service >>/tmp/controller/logs/s-object.service 2>/dev/null
              sudo journalctl -u devstack@s-proxy.service >>/tmp/controller/logs/s-proxy.service 2>/dev/null
              mkdir -p /tmp/controller/logs/etc
              sudo cp -r /etc/glance/ /etc/ironic/ /etc/keystone /etc/neutron /etc/swift /tmp/controller/logs/etc/ 2>/dev/null || :
              sudo cp /opt/stack/tempest/etc/tempest.conf /tmp/controller/logs/etc/ 2>/dev/null || :
              if [ -d /tmp/devstack_logs/ ]; then
                 mv /tmp/devstack_logs /tmp/controller/logs/ 2>/dev/null || :
                 sudo cp /opt/stack/devstack/local.conf /tmp/controller/logs/devstack_logs 2>/dev/null || :
              fi
              cd ~/
              wget --no-proxy http://15.213.141.10:9999/ironman-build_id_rsa
              sudo chmod 600 ironman-build_id_rsa
              remote_run="ssh -i /home/ubuntu/ironman-build_id_rsa -o StrictHostKeyChecking=no ironman-build@15.213.141.2"
              echo "Copying all logs to remote"
              echo "{{ log_path }}" >> /tmp/controller/paste_location
              tar -cvf /tmp/{{ zuul.change }}_{{ zuul.patchset }}_{{ zuul.job }}.tar /tmp/controller /tmp/job_logs
              scp -i /home/ubuntu/ironman-build_id_rsa -o StrictHostKeyChecking=no /tmp/{{ zuul.change }}_{{ zuul.patchset }}_{{ zuul.job }}.tar ironman-build@15.213.141.2:/home/ironman-build/hpeironicci_incoming_logs
              echo "done"


            dest: "{{ tmpe.path }}"
            mode: 0777
          no_log: true
          become: true

        - name: Posting logs to logserver
          shell: bash {{ tmpe.path }}
      always:
        - name: Post logs to gerrit
          delegate_to: localhost
          zuul_return:
            data:
             zuul:
                log_url: "https://hpproliant.github.io/hpeproliant.github.io/logs/{{ log_path }}/{{ zuul.build[:7] }}.html"
